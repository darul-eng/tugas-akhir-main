"Can be used as an argument to upload files using https://github.com/jaydenseric/graphql-multipart-request-spec"
scalar Upload
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Upload")

type Query {
    sumberDayaManusia: [HumanResource] @field(resolver: "SDM@sumberDayaManusia")
    sumberDayaManusiaByID(id_sdm: String!): HumanResource
        @field(resolver: "SDM@sdmByID")

    pendidikanFormals: [FormalEducation] @field(resolver: "FormalEducation@all")
    pendidikanFormal(id_sdm: String!): [FormalEducation]
        @field(resolver: "FormalEducation@byID")

    dokumens: [Dokumen] @field(resolver: "\\App\\GraphQL\\Mutations\\Dokumen@all")
    dokumen(id_sdm: String!): [Dokumen] @field(resolver: "\\App\\GraphQL\\Mutations\\Dokumen@byIDSdm")
}

type Mutation{
    uploadDokumen(file: Upload!, id_sdm: String!): String @field(resolver: "Dokumen@uploadDokumen")
}

type HumanResource {
    id: ID
    id_sdm: String
    nama_sdm: String
    nidn: String
    nip: String
    nama_status_aktif: String
    nama_status_pegawai: String
    jenis_sdm: String
    created_at: String,
    updated_at: String,
    pendidikan_formal: [FormalEducation] @hasMany
    dokumen: [Dokumen] @hasMany
}

type FormalEducation {
    id: ID
    id_sdm: String
    id_pendidikan: String
    jenjang_pendidikan: String
    gelar_akademik: String
    bidang_studi: String
    nama_perguruan_tinggi: String
    tahun_lulus: Int
    created_at: String,
    updated_at: String
}

type Dokumen {
    id: ID
    id_sdm: String
    id_dokumen: String
    dokumen: String
    created_at: String
    updated_at: String
}

type User {
    id: ID
    nama: String
    email: String
}

#import auth.graphql
